<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:l="clr-namespace:HapcanProgrammer.Styles"
>

    <SolidColorBrush x:Key="TextColor" Color="#FFB2B2B2"/>
    <SolidColorBrush x:Key="Background2" Color="#FF585E64"/>
    <Color x:Key="BackgroundColor">#FF252525</Color>

    <Color x:Key="Accent1Color">#FF508561</Color>
    <Color x:Key="Accent2Color">#FF508561</Color>
    <Color x:Key="Accent3Color">#FF508561</Color>

    <SolidColorBrush x:Key="Accent1Brush" Color="{StaticResource Accent1Color}"/>
    <SolidColorBrush x:Key="Accent2Brush" Color="{StaticResource Accent2Color}"/>
    <SolidColorBrush x:Key="Accent3Brush" Color="{StaticResource Accent3Color}"/>

    <!--<Style x:Key="ButtonsStyle" TargetType="Button">
        <Setter Property="ControlTemplate"
    </Style>-->
    <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="2" Background="{DynamicResource Background2}">
            <ContentPresenter TextBlock.Foreground="{StaticResource TextColor}" x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
                <!--<Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>-->
                <!--<Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>-->
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="9"/>
                <!--<Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>-->
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFBB7373"/>
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FF5F6989"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>



    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Background2}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Template" Value="{StaticResource ButtonBaseControlTemplate1}" />
        <!--<Setter Property="Opacity" Value="0.7"/>-->
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background">
            <Setter.Value>
                    <RadialGradientBrush>
                        <GradientStop Color="{StaticResource BackgroundColor}" Offset="1"/>
                        <GradientStop Color="Black" Offset="0.131"/>
                        <GradientStop Color="{StaticResource BackgroundColor}"/>
                    </RadialGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
   






</ResourceDictionary>